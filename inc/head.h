#ifndef __HEAD_H__
#define __HEAD_H__

////////头文件定义区//////////////
#include <iostream>
#include <string>
#include <vector>
#include <map>
#include <algorithm>
#include <fstream>
#include <iomanip>
#include <thread>
#include <cmath>

#include <boost/progress.hpp>
#include <boost/lexical_cast.hpp>
#include <boost/smart_ptr.hpp>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>


#include "DWT_init.h"
#include "rwDate.h" //读写文件类
#include "Matrix.h" //系数矩阵类
#include "transform.h"//分解类
#include "Reverse_Transform.h"//重构类
#include "rwDate_ref.h"
/////////////宏函数////////////////////
#define ERR_EXIT(m)			  \
	do				          		\
	{				          			\
		perror(m);		      	\
		exit(EXIT_FAILURE);	  \
    }while(0)

///全局函数//////////////////////////////////
int power(int base, int exponent);//指数函数



/////////常量定义区///////////////////////系数精度很高，采自matlab使用时需要翻转一下
const double db1_Lo_D[2] = { 0.70710678118654752440084436210485, 0.70710678118654752440084436210485 };
const double db1_Hi_D[2] = { -0.70710678118654752440084436210485, 0.70710678118654752440084436210485 };
const double db1_Lo_R[2] = { 0.70710678118654752440084436210485, 0.70710678118654752440084436210485 };
const double db1_Hi_R[2] = { 0.70710678118654752440084436210485, -0.70710678118654752440084436210485};

const double db2_Lo_D[4] = { -0.129409522550921, 0.224143868041857, 0.836516303737469, 0.482962913144690 };      // 小波变换分解低通滤波器
const double db2_Hi_D[4] = { -0.482962913144690, 0.836516303737469, -0.224143868041857, -0.129409522550921 };    // 小波变换分解高通滤波器
const double db2_Lo_R[4] = { 0.482962913144690, 0.836516303737469, 0.224143868041857, -0.129409522550921 };      // 小波变换重构低通滤波器
const double db2_Hi_R[4] = { -0.129409522550921, -0.224143868041857, 0.836516303737469, -0.482962913144690 };    // 小波变换重构高通滤波器

const double db3_Lo_D[6] = { 0.0352262918857095, -0.0854412738820267, -0.1350110200102546, 0.4598775021184914, 0.8068915093110924, 0.3326705529500825 };
const double db3_Hi_D[6] = { -0.3326705529500825, 0.8068915093110924, -0.4598775021184914, -0.1350110200102546, 0.0854412738820267, 0.0352262918857095 };
const double db3_Lo_R[6] = { 0.3326705529500825, 0.8068915093110924, 0.4598775021184914, -0.1350110200102546, -0.0854412738820267, 0.0352262918857095 };
const double db3_Hi_R[6] = { 0.0352262918857095, 0.0854412738820267, -0.1350110200102546, -0.4598775021184914, 0.8068915093110924, -0.3326705529500825 };

const double db4_Lo_D[8] = { -0.0105974017850690, 0.0328830116668852, 0.0308413818355607, -0.1870348117190931, -0.0279837694168599, 0.6308807679398587, 0.7148465705529154, 0.2303778133088964 };
const double db4_Hi_D[8] = { -0.2303778133088964, 0.7148465705529154, -0.6308807679398587, -0.0279837694168599, 0.1870348117190931, 0.0308413818355607, -0.0328830116668852, -0.0105974017850690 };
const double db4_Lo_R[8] = { 0.2303778133088964, 0.7148465705529154, 0.6308807679398587, -0.0279837694168599, -0.1870348117190931, 0.0308413818355607, 0.0328830116668852, -0.0105974017850690 };
const double db4_Hi_R[8] = { -0.0105974017850690, -0.0328830116668852, 0.0308413818355607, 0.1870348117190931, -0.0279837694168599, -0.6308807679398587, 0.7148465705529154, -0.2303778133088964 };

const double db5_Lo_D[10] = { 0.1601, 0.6038, 0.7243, 0.1384, -0.2423, -0.0322, 0.0776, -0.0062, -0.0126, 0.0033 };
const double db5_Hi_D[10] = { 0.0033, 0.0126, -0.0062, -0.0776, -0.0322, 0.2423, 0.1384, -0.7243, 0.6038, -0.1601 };
const double db5_Lo_R[10] = { 0.1601, 0.6038, 0.7243, 0.1384, -0.2423, -0.0322, 0.0776, -0.0062, -0.0126, 0.0033 };
const double db5_Hi_R[10] = { 0.0033, 0.0126, -0.0062, -0.0776, -0.0322, 0.2423, 0.1384, -0.7243, 0.6038, -0.1601 };

const double db6_Lo_D[12] = { -0.0011, 0.0048, 0.0006, -0.0316, 0.0275, 0.0975, -0.1298, -0.2263, 0.3153, 0.7511, 0.4946, 0.1115 };
const double db6_Hi_D[12] = { -0.1115, 0.4946, -0.7511, 0.3153, 0.2263, -0.1298, -0.0975, 0.0275, 0.0316, 0.0006, -0.0048, -0.0011 };
const double db6_Lo_R[12] = { 0.1115, 0.4946, 0.7511, 0.3153, -0.2263, -0.1298, 0.0975, 0.0275, -0.0316, 0.0006, 0.0048, -0.0011 };
const double db6_Hi_R[12] = { -0.0011, -0.0048, 0.0006, 0.0316, 0.0275, -0.0975, -0.1298, 0.2263, 0.3153, -0.7511, 0.4946, -0.1115 };

const double db7_Lo_D[14] = { 0.0004, -0.0018, 0.0004, 0.0126, -0.0166, -0.0380, 0.0806, 0.0713, -0.2240, -0.1439, 0.4698, 0.7291, 0.3965, 0.0779 };
const double db7_Hi_D[14] = { -0.0779, 0.3965, -0.7291, 0.4698, 0.1439, -0.2240, -0.0713, 0.0806, 0.0380 - 0.0166, -0.0126, 0.0004, 0.0018, 0.0004 };
const double db7_Lo_R[14] = { 0.0779, 0.3965, 0.7291, 0.4698, -0.1439, -0.2240, 0.0713, 0.0806, -0.0380, -0.0166, 0.0126, 0.0004, -0.0018, 0.0004 };
const double db7_Hi_R[14] = { 0.0004, 0.0018, 0.0004, -0.0126, -0.0166, 0.0380, 0.0806, -0.0713, -0.2240, 0.1439, 0.4698, -0.7291, 0.3965, -0.0779 };

const double db8_Lo_D[16] = { -0.0001, 0.0007, -0.0004, -0.0049, 0.0087, 0.0140, -0.0441, -0.0174, 0.1287, 0.0005, -0.2840, -0.0158, 0.5854, 0.6756, 0.3129, 0.0544 };
const double db8_Hi_D[16] = { -0.0544, 0.3129, -0.6756, 0.5854, 0.0158, -0.2840, -0.0005, 0.1287, 0.0174, -0.0441, -0.0140, 0.0087, 0.0049, -0.0004, -0.0007, -0.0001 };
const double db8_Lo_R[16] = { 0.0544, 0.3129, 0.6756, 0.5854, -0.0158, -0.2840, 0.0005, 0.1287, -0.0174, -0.0441, 0.0140, 0.0087, -0.0049, -0.0004, 0.0007, -0.0001 };
const double db8_Hi_R[16] = { -0.0001, -0.0007, -0.0004, 0.0049, 0.0087, -0.0140, -0.0441, 0.0174, 0.1287, -0.0005, -0.2840, 0.0158, 0.5854, -0.6756, 0.3129, -0.0544 };

const double db9_Lo_D[18] = { 0.0000, -0.0003, 0.0002, 0.0018, -0.0043, -0.0047, 0.0224, 0.0003, -0.0676, 0.0307, 0.1485, -0.0968, -0.2933, 0.1332, 0.6573, 0.6048, 0.2438, 0.0381 };
const double db9_Hi_D[18] = { -0.0381, 0.2438, -0.6048, 0.6573, -0.1332, -0.2933, 0.0968, 0.1485, -0.0307, -0.0676, -0.0003, 0.0224, 0.0047, -0.0043, -0.0018, 0.0002, 0.0003, 0.0000 };
const double db9_Lo_R[18] = { 0.0381, 0.2438, 0.6048, 0.6573, 0.1332, -0.2933, -0.0968, 0.1485, 0.0307, -0.0676, 0.0003, 0.0224, -0.0047, -0.0043, 0.0018, 0.0002, -0.0003, 0.0000 };
const double db9_Hi_R[18] = { 0.0000, 0.0003, 0.0002, -0.0018, -0.0043, 0.0047, 0.0224, -0.0003, -0.0676, -0.0307, 0.1485, 0.0968, -0.2933, -0.1332, 0.6573, -0.6048, 0.2438, -0.0381 };

const double db10_Lo_D[20] = { -0.0000, 0.0001, -0.0001, -0.0007, 0.0020, 0.0014, -0.0107, 0.0036, 0.0332, -0.0295, -0.0714, 0.0931, 0.1274, -0.1959, -0.2498, 0.2812, 0.6885, 0.5272, 0.1882, 0.0267 };
const double db10_Hi_D[20] = { -0.0267, 0.1882, -0.5272, 0.6885, -0.2812, -0.2498, 0.1959, 0.1274, -0.0931, -0.0714, 0.0295, 0.0332, -0.0036, -0.0107, -0.0014, 0.0020, 0.0007, -0.0001, -0.0001, -0.0000 };
const double db10_Lo_R[20] = { 0.0267, 0.1882, 0.5272, 0.6885, 0.2812, -0.2498, -0.1959, 0.1274, 0.0931, -0.0714, -0.0295, 0.0332, 0.0036, -0.0107, 0.0014, 0.0020, -0.0007, -0.0001, 0.0001, -0.0000 };
const double db10_Hi_R[20] = { -0.0000, -0.0001, -0.0001, 0.0007, 0.0020, -0.0014, -0.0107, -0.0036, 0.0332, 0.0295, -0.0714, -0.0931, 0.1274, 0.1959, -0.2498, -0.2812, 0.6885, -0.5272, 0.1882, -0.0267 };

#endif

/*
信号 	 频率范围			信号 	频率范围			信号 	频率范围				信号	 频率范围					信号	 频率范围				信号	 频率范围				信号	 频率范围				信号	 频率范围
S01		0~0.125			S33		4~4.125			S65		8~8.125				S97		12~12.125				S129	16~16.125			S161	20~20.125			S193	24~24.125			S225	28~28.125
S02		0.125~0.25	S34		4.125~4.25	S66		8.125~8.25		S98		12.125~12.25		S130	16.125~16.25	S162	20.125~20.25	S194	24.125~24.25	S226	28.125~28.25
S03		0.25~0.375	S35		4.25~4.375	S67		8.25~8.375		S99		12.25~12.375		S131	16.25~16.375	S163	20.25~20.375	S195	24.25~24.375	S227	28.25~28.375
S04		0.375~0.5		S36		4.375~4.5		S68		8.375~8.5			S100	12.375~12.5			S132	16.375~16.5		S164	20.375~20.5		S196	24.375~24.5		S228	28.375~28.5
S05		0.5~0.625		S37		4.5~4.625		S69		8.5~8.625			S101	12.5~12.625			S133	16.5~16.625		S165	20.5~20.625		S197	24.5~24.625		S229	28.5~28.625
S06		0.625~0.75	S38		4.625~4.75	S70		8.625~8.75		S102	12.625~12.75		S134	16.625~16.75	S166	20.625~20.75	S198	24.625~24.75	S230	28.625~28.75
S07		0.75~0.875	S39		4.75~4.875	S71		8.75~8.875		S103	12.75~12.875		S135	16.75~16.875	S167	20.75~20.875	S199	24.75~24.875	S231	28.75~28.875
S08		0.875~1			S40		4.875~5			S72		8.875~9				S104	12.875~13				S136	16.875~17			S168	20.875~21			S200	24.875~25			S232	28.875~29
S09		1~1.125			S41		5~5.125			S73		9~9.125				S105	13~13.125				S137	17~17.125			S169	21~21.125			S201	25~25.125			S233	29~29.125
S10		1.125~1.25	S42		5.125~5.25	S74		9.125~9.25		S106	13.125~13.25		S138	17.125~17.25	S170	21.125~21.25	S202	25.125~25.25	S234	29.125~29.25
S11		1.25~1.375	S43		5.25~5.375	S75		9.25~9.375		S107	13.25~13.375		S139	17.25~17.375	S171	21.25~21.375	S203	25.25~25.375	S235	29.25~29.375
S12		1.375~1.5		S44		5.375~5.5		S76		9.375~9.5			S108	13.375~13.5			S140	17.375~17.5		S172	21.375~21.5		S204	25.375~25.5		S236	29.375~29.5
S13		1.5~1.625		S45		5.5~5.625		S77		9.5~9.625			S109	13.5~13.625			S141	17.5~17.625		S173	21.5~21.625		S205	25.5~25.625		S237	29.5~29.625
S14		1.625~1.75	S46		5.625~5.75	S78		9.625~9.75		S110	13.625~13.75		S142	17.625~17.75	S174	21.625~21.75	S206	25.625~25.75	S238	29.625~29.75
S15		1.75~1.875	S47		5.75~5.875	S79		9.75~9.875		S111	13.75~13.875		S143	17.75~17.875	S175	21.75~21.875	S207	25.75~25.875	S239	29.75~29.875
S16		1.875~2			S48		5.875~6			S80		9.875~10			S112	13.875~14				S144	17.875~18			S176	21.875~22			S208	25.875~26			S240	29.875~30
S17		2~2.125			S49		6~6.125			S81		10~10.125			S113	14~14.125				S145	18~18.125			S177	22~22.125			S209	26~26.125			S241	30~30.125
S18		2.125~2.25	S50		6.125~6.25	S82		10.125~10.25	S114	14.125~14.25		S146	18.125~18.25	S178	22.125~22.25	S210	26.125~26.25	S242	30.125~30.25
S19		2.25~2.375	S51		6.25~6.375	S83		10.25~10.375	S115	14.25~14.375		S147	18.25~18.375	S179	22.25~22.375	S211	26.25~26.375	S243	30.25~30.375
S20		2.375~2.5		S52		6.375~6.5		S84		10.375~10.5		S116	14.375~14.5			S148	18.375~18.5		S180	22.375~22.5		S212	26.375~26.5		S244	30.375~30.5
S21		2.5~2.625		S53		6.5~6.625		S85		10.5~10.625		S117	14.5~14.625			S149	18.5~18.625		S181	22.5~22.625		S213	26.5~26.625		S245	30.5~30.625
S22		2.625~2.75	S54		6.625~6.75	S86		10.625~10.75	S118	14.625~14.75		S150	18.625~18.75	S182	22.625~22.75	S214	26.625~26.75	S246	30.625~30.75
S23		2.75~2.875	S55		6.75~6.875	S87		10.75~10.875	S119	14.75~14.875		S151	18.75~18.875	S183	22.75~22.875	S215	26.75~26.875	S247	30.75~30.875
S24		2.875~3			S56		6.875~7			S88		10.875~11			S120	14.875~15				S152	18.875~19			S184	22.875~23			S216	26.875~27			S248	30.875~31
S25		3~3.125			S57		7~7.125			S89		11~11.125			S121	15~15.125				S153	19~19.125			S185	23~23.125			S217	27~27.125			S249	31~31.125
S26		3.125~3.25	S58		7.125~7.25	S90		11.125~11.25	S122	15.125~15.25		S154	19.125~19.25	S186	23.125~23.25	S218	27.125~27.25	S250	31.125~31.25
S27		3.25~3.375	S59		7.25~7.375	S91		11.25~11.375	S123	15.25~15.375		S155	19.25~19.375	S187	23.25~23.375	S219	27.25~27.375	S251	31.25~31.375
S28		3.375~3.5		S60		7.375~7.5		S92		11.375~11.5		S124	15.375~15.5			S156	19.375~19.5		S188	23.375~23.5		S220	27.375~27.5		S252	31.375~31.5
S29		3.5~3.625		S61		7.5~7.625		S93		11.5~11.625		S125	15.5~15.625			S157	19.5~19.625		S189	23.5~23.625		S221	27.5~27.625		S253	31.5~31.625
S30		3.625~3.75	S62		7.625~7.75	S94		11.625~11.75	S126	15.625~15.75		S158	19.625~19.75	S190	23.625~23.75	S222	27.625~27.75	S254	31.625~31.75
S31		3.75~3.875	S63		7.75~7.875	S95		11.75~11.875	S127	15.75~15.875		S159	19.75~19.875	S191	23.75~23.875	S223	27.75~27.875	S255	31.75~31.875
S32		3.875~4			S64		7.875~8			S96		11.875~12			S128	15.875~16				S160	19.875~20			S192	23.875~24			S224	27.875~28			S256	31.875~32

*/
